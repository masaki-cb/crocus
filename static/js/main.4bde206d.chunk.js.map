{"version":3,"sources":["components/CriticDetail.module.scss","components/CriticTable.tsx","components/CriticDetail.tsx","App.tsx","reportWebVitals.js","index.js","components/CriticTable.module.scss"],"names":["module","exports","columns","Header","accessor","CriticTable","allData","onRowClick","currentItem","defaultColumn","useMemo","maxWidth","minWidth","useTable","data","isMultiSortEvent","me","useSortBy","useBlockLayout","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","isActive","row","pieceID","playerID","criticID","className","style","height","styles","cardContent","thead","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","icon","faSortAlphaDownAlt","marginLeft","faSortAlphaUp","faSort","tbody","i","getRowProps","onClick","original","cells","cell","getCellProps","CriticDetail","overflowY","dangerouslySetInnerHTML","__html","content","replaceAll","controls","src","audio","type","width","href","target","rel","App","jsonData","useState","currentCritic","setCurrentCritic","overflowX","critic","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4bde206d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"audio\":\"CriticDetail_audio__fIUzV\"};","import { useMemo } from \"react\";\nimport { useTable, Column, useSortBy, useBlockLayout } from \"react-table\";\nimport styles from \"./CriticTable.module.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faSort,\n  faSortAlphaUp,\n  faSortAlphaDownAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\n\ntype Data = {\n  pieceID: string;\n  playerID: string;\n  criticID: string;\n  critiqueFileName: string;\n  content: string;\n};\n\nconst columns: Column<Data>[] = [\n  { Header: \"pieceID\", accessor: \"pieceID\" },\n  { Header: \"playerID\", accessor: \"playerID\" },\n  { Header: \"criticID\", accessor: \"criticID\" },\n];\ntype Props = {\n  onRowClick: (param: Data) => void;\n  allData: Data[];\n  currentItem: Data;\n};\n\nconst CriticTable = ({ allData, onRowClick, currentItem }: Props) => {\n  const defaultColumn = useMemo(\n    () => ({\n      maxWidth: 300,\n      minWidth: 100,\n    }),\n    []\n  );\n\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    useTable<Data>(\n      {\n        columns,\n        data: allData,\n        defaultColumn,\n        isMultiSortEvent: (me: React.MouseEvent) => {\n          return true;\n        },\n      },\n      useSortBy,\n      useBlockLayout\n    );\n\n  const isActive = (row: Data) => {\n    return (\n      row.pieceID === currentItem.pieceID &&\n      row.playerID === currentItem.playerID &&\n      row.criticID === currentItem.criticID\n    );\n  };\n  return (\n    <div className={`card`} style={{ height: \"100%\" }}>\n      <div className={`card-content ${styles.cardContent}`}>\n        <table className=\"table is-hoverable\" {...getTableProps()}>\n          <thead className={styles.thead}>\n            {headerGroups.map((headerGroup) => (\n              <tr {...headerGroup.getHeaderGroupProps()}>\n                {headerGroup.headers.map((column) => (\n                  <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                    {column.render(\"Header\")}\n                    <span>\n                      {column.isSorted ? (\n                        column.isSortedDesc ? (\n                          <FontAwesomeIcon\n                            icon={faSortAlphaDownAlt}\n                            style={{ marginLeft: \"0.5rem\" }}\n                          />\n                        ) : (\n                          <FontAwesomeIcon\n                            icon={faSortAlphaUp}\n                            style={{ marginLeft: \"0.5rem\" }}\n                          />\n                        )\n                      ) : (\n                        <FontAwesomeIcon\n                          icon={faSort}\n                          style={{ marginLeft: \"0.5rem\" }}\n                        />\n                      )}\n                    </span>\n                  </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody {...getTableBodyProps()} className={styles.tbody}>\n            {rows.map((row, i) => {\n              prepareRow(row);\n              return (\n                <tr\n                  {...row.getRowProps()}\n                  onClick={() => onRowClick(row.original)}\n                  className={\n                    isActive(row.original) ? \"has-background-primary\" : \"\"\n                  }\n                >\n                  {row.cells.map((cell) => {\n                    return (\n                      <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                    );\n                  })}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\nexport default CriticTable;\n","import styles from \"./CriticDetail.module.scss\";\n\ntype Data = {\n  pieceID: string;\n  playerID: string;\n  criticID: string;\n  critiqueFileName: string;\n  content: string;\n};\ntype Props = { data: Data };\nconst CriticDetail = ({ data }: Props) => {\n  return (\n    <div className=\"card\" style={{ height: \"100%\" }}>\n      <div\n        className=\"card-content\"\n        style={{ height: \"100%\", overflowY: \"scroll\" }}\n      >\n        <p className=\"is-size-4\">criticID: {data.criticID}</p>\n        <p className=\"is-size-6\">playerID: {data.playerID}</p>\n        <p className=\"is-size-6\">pieceID: {data.pieceID}</p>\n        <p\n          dangerouslySetInnerHTML={{\n            __html: data.content.replaceAll(\"\\n\", \"<br />\"),\n          }}\n          className=\"mt-5\"\n        />\n        <audio\n          controls\n          src={`Performance_Recordings_mp3/${data.pieceID}-${data.playerID}.mp3`}\n          className={`${styles.audio} mt-5`}\n        >\n          Your browser does not support the\n          <code>audio</code> element.\n        </audio>\n        <div className=\"mt-5\">\n          <object\n            data={`Music_Score/${data.pieceID}.pdf`}\n            type=\"application/pdf\"\n            width=\"100%\"\n            height=\"500px\"\n          >\n            <p>\n              <a\n                href={`Music_Score/${data.pieceID}.pdf`}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                Download Piece PDF\n              </a>\n            </p>\n          </object>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default CriticDetail;\n","import { useState } from \"react\";\n\nimport CriticTable from \"./components/CriticTable\";\nimport CriticDetail from \"./components/CriticDetail\";\nimport jsonData from \"./data.json\";\nimport styles from \"./App.module.scss\";\n\ntype Data = {\n  pieceID: string;\n  playerID: string;\n  criticID: string;\n  critiqueFileName: string;\n  content: string;\n};\n\nconst App = () => {\n  const data: Data[] = jsonData;\n  const [currentCritic, setCurrentCritic] = useState(data[0]);\n\n  return (\n    <div className=\"container\">\n      <div className=\"section pb-0\">\n        <h1 className=\"title\">Music Critic Dataset</h1>\n      </div>\n      <div className=\"section\">\n        <div className={`columns ${styles.columns}`}>\n          <div\n            className=\"column is-two-thirds-desktop\"\n            style={{ overflowX: \"scroll\" }}\n          >\n            <CriticTable\n              onRowClick={(critic) => setCurrentCritic(critic)}\n              allData={data}\n              currentItem={currentCritic}\n            />\n          </div>\n          <div className=\"column\">\n            <CriticDetail data={currentCritic} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardContent\":\"CriticTable_cardContent__2HN-O\",\"tbody\":\"CriticTable_tbody__YolIO\"};"],"sourceRoot":""}